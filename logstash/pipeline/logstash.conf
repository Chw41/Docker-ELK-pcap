input {
  file {
    path => "/pcap/*.pcap"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => plain
  }
}

filter {
  if [path] =~ "\.pcap$" {
    ruby {
      code => '
        require "open3"
        
        file_path = event.get("path")
        
        cmd = "tshark -r \"#{file_path}\" -T fields -e tcp.stream -e udp.stream -e http.request.method -e http.request.uri -e http.host -e http.request.full_uri -e http.request.line -e http.response.line -e http.response.code -E header=y -E separator=@@@"
        
        output, status = Open3.capture2(cmd)
        
        if status.success?
          packets = output.split("\n").map do |line|
            parts = line.split("@@@")
            packet = {
              "tcp_stream" => parts[0],
              "udp_stream" => parts[1],
              "method" => parts[2],
              "uri" => parts[3],
              "host" => parts[4],
              "full_uri" => parts[5],
              "request_line" => parts[6],
              "response_line" => parts[7],
              "response_code" => parts[8]
            }
			
            packet.reject! { |key, value| value.nil? || value.empty? }
            packet
          end
          
          packets.each do |packet|
            new_event = LogStash::Event.new(packet)
            new_event.set("original_pcap_file", file_path)
            event.create_event_with_context(new_event)
          end
        end
      '
    }
  }
}


output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "pcap-full-packets-%{+YYYY.MM.dd}"
  }
}